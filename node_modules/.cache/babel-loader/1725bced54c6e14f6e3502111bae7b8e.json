{"ast":null,"code":"import _classCallCheck from \"/home/atemengue/Documents/WebApp/app-base/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/atemengue/Documents/WebApp/app-base/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/atemengue/Documents/WebApp/app-base/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/atemengue/Documents/WebApp/app-base/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/atemengue/Documents/WebApp/app-base/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/atemengue/Documents/WebApp/app-base/src/streams/StreamCreate.js\";\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nvar StreamCreate =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StreamCreate, _Component);\n\n  function StreamCreate() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamCreate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamCreate)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderInput = function (_ref) {\n      var input = _ref.input,\n          label = _ref.label,\n          meta = _ref.meta;\n      var className = \"fied \".concat(meta.error && meta.touched ? 'error' : '');\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      })), _this.renderError(meta));\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamCreate, [{\n    key: \"renderError\",\n    value: function renderError(_ref2) {\n      var error = _ref2.error,\n          touched = _ref2.touched;\n\n      if (touched && error) {\n        return React.createElement(\"div\", {\n          className: \"ui error message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }, error));\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(formValues) {\n      console.log(formValues);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        className: \"ui form error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"title\",\n        component: this.renderInput,\n        label: \"Enter Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"description\",\n        component: this.renderInput,\n        label: \"Enter description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return StreamCreate;\n}(Component);\n\nvar validate = function validate(values) {\n  var errors = {};\n\n  if (!values.title) {\n    errors.title = \"You must enter a title\";\n  }\n\n  if (!values.description) {\n    errors.description = \"You must enter a description\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'streamCreate',\n  validate: validate\n})(StreamCreate); // return <input  \n// onChange={formProps.input.onChange}\n// value={formProps.input.value}\n// />","map":{"version":3,"sources":["/home/atemengue/Documents/WebApp/app-base/src/streams/StreamCreate.js"],"names":["React","Component","Field","reduxForm","StreamCreate","renderInput","input","label","meta","className","error","touched","renderError","formValues","console","log","props","handleSubmit","onSubmit","validate","values","errors","title","description","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;IAEOC,Y;;;;;;;;;;;;;;;;;;UAYLC,W,GAAa,gBAA0B;AAAA,UAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,UAAjBC,KAAiB,QAAjBA,KAAiB;AAAA,UAAVC,IAAU,QAAVA,IAAU;AAErC,UAAMC,SAAS,kBAAUD,IAAI,CAACE,KAAL,IAAcF,IAAI,CAACG,OAAnB,GAA6B,OAA7B,GAAsC,EAAhD,CAAf;AACA,aACE;AAAK,QAAA,SAAS,EAAEF,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQF,KAAR,CADF,EAEE,+CAAWD,KAAX;AAAkB,QAAA,YAAY,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAGG,MAAKM,WAAL,CAAiBJ,IAAjB,CAHH,CADF;AAOD,K;;;;;;;uCApB8B;AAAA,UAAjBE,KAAiB,SAAjBA,KAAiB;AAAA,UAAVC,OAAU,SAAVA,OAAU;;AAC7B,UAAIA,OAAO,IAAID,KAAf,EAAsB;AACpB,eACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBA,KAAzB,CADF,CADF;AAKD;AACF;;;6BAcQG,U,EAAY;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACD;;;6BACQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWC,YAAX,CAAwB,KAAKC,QAA7B,CAAjB;AAAyD,QAAA,SAAS,EAAC,eAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAE,KAAKb,WAApC;AAAiD,QAAA,KAAK,EAAC,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,SAAS,EAAE,KAAKA,WAA1C;AAAuD,QAAA,KAAK,EAAC,mBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF,CADF;AASD;;;;EArCyBJ,S;;AAwC5B,IAAMkB,QAAQ,GAAG,SAAXA,QAAW,CAAAC,MAAM,EAAI;AACzB,MAAMC,MAAM,GAAG,EAAf;;AACA,MAAI,CAACD,MAAM,CAACE,KAAZ,EAAmB;AACjBD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACD;;AAED,MAAG,CAACF,MAAM,CAACG,WAAX,EAAwB;AACtBF,IAAAA,MAAM,CAACE,WAAP,GAAoB,8BAApB;AACD;;AACD,SAAOF,MAAP;AACD,CAVD;;AAaA,eAAgBlB,SAAS,CAAC;AACxBqB,EAAAA,IAAI,EAAE,cADkB;AAExBL,EAAAA,QAAQ,EAARA;AAFwB,CAAD,CAAT,CAGbf,YAHa,CAAhB,C,CAMA;AACI;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\n class StreamCreate extends Component {\n\n  renderError({ error, touched}) {\n    if (touched && error) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{error}</div>\n      </div>\n      )\n    }\n  }\n\n  renderInput= ({input, label, meta}) => {\n\n    const className =`fied ${meta.error && meta.touched ? 'error': ''}`\n    return(\n      <div className={className}>\n        <label>{label}</label>\n        <input {...input} autoComplete=\"off\"  />\n        {this.renderError(meta)}\n      </div>\n    ) \n  }\n\n  onSubmit(formValues) {\n    console.log(formValues)\n  }\n  render() {\n    return (\n      <div>\n        <form  onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n          <Field name=\"title\" component={this.renderInput} label=\"Enter Title\" />\n          <Field name=\"description\" component={this.renderInput} label=\"Enter description\"/>\n          <button className=\"ui button primary\">Submit</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst validate = values => {\n  const errors = {}\n  if (!values.title) {\n    errors.title = \"You must enter a title\";\n  }\n\n  if(!values.description) {\n    errors.description =\"You must enter a description\"\n  }\n  return errors\n}\n\n\nexport default  reduxForm({\n  form: 'streamCreate',\n  validate\n})(StreamCreate);\n\n\n// return <input  \n    // onChange={formProps.input.onChange}\n    // value={formProps.input.value}\n    // />"]},"metadata":{},"sourceType":"module"}